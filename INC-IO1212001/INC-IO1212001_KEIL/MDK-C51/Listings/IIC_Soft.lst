C51 COMPILER V9.56.0.0   IIC_SOFT                                                          04/25/2018 14:47:16 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE IIC_SOFT
OBJECT MODULE PLACED IN .\Objects\IIC_Soft.obj
COMPILER INVOKED BY: D:\hardware\Keil_v5\C51\BIN\C51.EXE ..\Src\IIC_Soft.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Inc;
                    -..\User) DEBUG OBJECTEXTEND PRINT(.\Listings\IIC_Soft.lst) TABS(2) OBJECT(.\Objects\IIC_Soft.obj)

line level    source

   1          #include "IIC_SOFT.h"
   2          #include "delay.h"
   3          
   4          void IIC_Init(void)
   5          {
   6   1        
   7   1      }
   8          //产生IIC起始信号
   9          void IIC_Start(void)
  10          {
  11   1        //IIC_SDA_OUT();     //sda线输出
  12   1        IIC_SDA=1;        
  13   1        IIC_SCL=1;
  14   1        delay_us(4);
  15   1        IIC_SDA=0;//START:when CLK is high,DATA change form high to low 
  16   1        delay_us(4);
  17   1        IIC_SCL=0;//钳住I2C总线，准备发送或接收数据 
  18   1      }   
  19          //产生IIC停止信号
  20          void IIC_Stop(void)
  21          {
  22   1        //IIC_SDA_OUT();//sda线输出
  23   1        IIC_SCL=0;
  24   1        IIC_SDA=0;//STOP:when CLK is high DATA change form low to high
  25   1        delay_us(4);
  26   1        IIC_SCL=1; 
  27   1        IIC_SDA=1;//发送I2C总线结束信号
  28   1        delay_us(4);                  
  29   1      }
  30          //等待应答信号到来
  31          //返回值：1，接收应答失败
  32          //        0，接收应答成功
  33          u8 IIC_Wait_Ack(void)
  34          {
  35   1        u8 ucErrTime=0;
  36   1        //IIC_SDA_IN();      //SDA设置为输入  
  37   1        IIC_SDA=1;delay_us(1);     
  38   1        IIC_SCL=1;delay_us(1);   
  39   1        while(IIC_READ_SDA)
  40   1        {
  41   2          ucErrTime++;
  42   2          if(ucErrTime>250)
  43   2          {
  44   3            IIC_Stop();
  45   3            return 1;
  46   3          }
  47   2        }
  48   1        IIC_SCL=0;//时钟输出0      
  49   1        return 0;  
  50   1      } 
  51          //产生ACK应答
  52          void IIC_Ack(void)
  53          {
  54   1        IIC_SCL=0;
C51 COMPILER V9.56.0.0   IIC_SOFT                                                          04/25/2018 14:47:16 PAGE 2   

  55   1        //IIC_SDA_OUT();
  56   1        IIC_SDA=0;
  57   1        delay_us(2);
  58   1        IIC_SCL=1;
  59   1        delay_us(2);
  60   1        IIC_SCL=0;
  61   1      }
  62          //不产生ACK应答       
  63          void IIC_NAck(void)
  64          {
  65   1        IIC_SCL=0;
  66   1        //IIC_SDA_OUT();
  67   1        IIC_SDA=1;
  68   1        delay_us(2);
  69   1        IIC_SCL=1;
  70   1        delay_us(2);
  71   1        IIC_SCL=0;
  72   1      }                      
  73          //IIC发送一个字节
  74          //返回从机有无应答
  75          //1，有应答
  76          //0，无应答       
  77          void IIC_Send_Byte(u8 txd)
  78          {                        
  79   1          u8 t;   
  80   1          //IIC_SDA_OUT();      
  81   1          IIC_SCL=0;//拉低时钟开始数据传输
  82   1          for(t=0;t<8;t++)
  83   1          {              
  84   2              IIC_SDA=(txd&0x80)>>7;
  85   2              txd<<=1;    
  86   2          delay_us(2);  //对TEA5767这三个延时都是必须的
  87   2          IIC_SCL=1;
  88   2          delay_us(2);
  89   2          IIC_SCL=0;  
  90   2          delay_us(2);
  91   2          }  
  92   1          //delay_us(5);
  93   1      }       
  94          //读1个字节，ack=1时，发送ACK，ack=0，发送nACK   
  95          u8 IIC_Read_Byte(unsigned char ack)
  96          {
  97   1        unsigned char i,receive=0;
  98   1        IIC_SDA_IN();//SDA设置为输入
  99   1          for(i=0;i<8;i++ )
 100   1        {
 101   2              IIC_SCL=0; 
 102   2              delay_us(2);
 103   2              IIC_SCL=1;
 104   2          
 105   2              receive<<=1;
 106   2              if(IIC_READ_SDA)receive++;   
 107   2              delay_us(1); 
 108   2          }          
 109   1          if (!ack)
 110   1              IIC_NAck();//发送nACK
 111   1          else
 112   1              IIC_Ack(); //发送ACK   
 113   1          return receive;
 114   1      }
 115          
 116          
C51 COMPILER V9.56.0.0   IIC_SOFT                                                          04/25/2018 14:47:16 PAGE 3   

 117          //
 118          void IIC_ReadByte(u8 DeviceAddr, u8 Addr_Data )
 119          {                                          
 120   1        IIC_Start();  
 121   1        IIC_Send_Byte(DeviceAddr & 0xFE);   //写器件地址     
 122   1        IIC_Wait_Ack();
 123   1        
 124   1        IIC_Send_Byte(Addr_Data);           //发送寄存器地址
 125   1        IIC_Wait_Ack(); 
 126   1        
 127   1        IIC_Start();         
 128   1        IIC_Send_Byte(DeviceAddr | 0x01);   //进入接收模式         
 129   1        IIC_Wait_Ack(); 
 130   1        
 131   1        Addr_Data=IIC_Read_Byte(0); 
 132   1        IIC_Stop();                        //产生一个停止条件     
 133   1      }
 134          //
 135          void IIC_ReadBytes(u8 DeviceAddr, char * Addr_Data, u8 len )
 136          {
 137   1        u8 i=0;                                            
 138   1        IIC_Start();  
 139   1        IIC_Send_Byte(DeviceAddr & 0xFE);   //写器件地址     
 140   1        IIC_Wait_Ack();
 141   1        
 142   1        IIC_Send_Byte(*Addr_Data);          //发送寄存器地址
 143   1        IIC_Wait_Ack(); 
 144   1        
 145   1        IIC_Start();         
 146   1        IIC_Send_Byte(DeviceAddr | 0x01);   //进入接收模式         
 147   1        IIC_Wait_Ack(); 
 148   1        
 149   1        for(i=0;i<len;i++)
 150   1        {
 151   2          *(Addr_Data+i)=IIC_Read_Byte(0);  
 152   2        }
 153   1        IIC_Stop();                        //产生一个停止条件     
 154   1      }
 155          //
 156          void IIC_WriteByte(u8 DeviceAddr, u8 RegAddr, u8 RegData )
 157          {                                                    
 158   1        IIC_Start();  
 159   1        IIC_Send_Byte(DeviceAddr & 0xFE);   //写器件地址     
 160   1        IIC_Wait_Ack();
 161   1        
 162   1        IIC_Send_Byte(RegAddr);             //发送寄存器地址
 163   1        IIC_Wait_Ack(); 
 164   1                                   
 165   1        IIC_Send_Byte(RegData);             //发送字节                 
 166   1        IIC_Wait_Ack(); 
 167   1        
 168   1        IIC_Stop();                         //产生一个停止条件 
 169   1        delay_ms(10);
 170   1      }
 171          //
 172          void IIC_WriteBytes(u8 DeviceAddr, u8 RegAddr, char *RegData , u8 len)
 173          { 
 174   1        IIC_Start();  
 175   1        IIC_Send_Byte(DeviceAddr & 0xFE);   //写器件地址     
 176   1        IIC_Wait_Ack();
 177   1        
 178   1        IIC_Send_Byte(RegAddr);             //发送寄存器地址
C51 COMPILER V9.56.0.0   IIC_SOFT                                                          04/25/2018 14:47:16 PAGE 4   

 179   1        IIC_Wait_Ack(); 
 180   1        
 181   1        while(len--)
 182   1        {
 183   2          IIC_Send_Byte(*(RegData++));      //发送字节                 
 184   2          IIC_Wait_Ack(); 
 185   2        }
 186   1        
 187   1        IIC_Stop();                         //产生一个停止条件 
 188   1        delay_ms(10);
 189   1      }
 190          //
 191          void IIC_DeviceReadBytes(u8 DeviceAddr, u16 ReadAddr, u8 *RegData, u8 len, u8 DeviceType )
 192          {                                          
 193   1        IIC_Start();  
 194   1        if(DeviceType==3)           //寄存器地址与器件地址复用，如AT24C02~AT24C64
 195   1        {
 196   2          IIC_Send_Byte(DeviceAddr & 0xFE +((ReadAddr/256)<<1));   //发送器件地址0XA0,写数据 
 197   2          IIC_Wait_Ack(); 
 198   2          IIC_Send_Byte(ReadAddr%256);         //发送低地址
 199   2          IIC_Wait_Ack(); 
 200   2        } 
 201   1        else if(DeviceType==2)    //两字节寄存器地址，         如AT24C125~AT24C512
 202   1        {
 203   2          IIC_Send_Byte(DeviceAddr & 0xFE);   //写器件地址    
 204   2          IIC_Wait_Ack();
 205   2          IIC_Send_Byte(ReadAddr>>8);        //发送高地址
 206   2          IIC_Wait_Ack();
 207   2          IIC_Send_Byte(ReadAddr%256);       //发送低地址
 208   2          IIC_Wait_Ack();                             
 209   2        } 
 210   1        else if(DeviceType==1)  //一字节寄存器地址            
 211   1        {
 212   2          IIC_Send_Byte(DeviceAddr & 0xFE);   //写器件地址    
 213   2          IIC_Wait_Ack();
 214   2          IIC_Send_Byte(ReadAddr%256);        //发送低地址
 215   2          IIC_Wait_Ack();                             
 216   2        } 
 217   1        
 218   1        IIC_Start();         
 219   1        IIC_Send_Byte(DeviceAddr | 0x01);    //进入接收模式        
 220   1        IIC_Wait_Ack(); 
 221   1        
 222   1      //  while(len--)
 223   1      //  {
 224   1      //    *(RegData++)=IIC_Read_Byte(1);  
 225   1      //  }
 226   1          while(len!=1)
 227   1        {
 228   2          len--;
 229   2          *(RegData++)=IIC_Read_Byte(1);  
 230   2        }
 231   1        *(RegData++)=IIC_Read_Byte(0);
 232   1        IIC_Stop();                        //产生一个停止条件     
 233   1      }
 234          //
 235          void IIC_DeviceWriteBytes(u8 DeviceAddr, u16 WriteAddr, u8  *RegData , u8 len, u8 DeviceType)
 236          { 
 237   1        IIC_Start();  
 238   1        if(DeviceType==3)
 239   1        {
 240   2          IIC_Send_Byte(DeviceAddr & 0xFE +((WriteAddr/256)<<1));   //发送器件地址0XA0,写数据 
C51 COMPILER V9.56.0.0   IIC_SOFT                                                          04/25/2018 14:47:16 PAGE 5   

 241   2          IIC_Wait_Ack(); 
 242   2          IIC_Send_Byte(WriteAddr%256);          //发送低地址
 243   2          IIC_Wait_Ack(); 
 244   2        } 
 245   1        else if(DeviceType==2)
 246   1        {
 247   2          IIC_Send_Byte(DeviceAddr & 0xFE);   //写器件地址    
 248   2          IIC_Wait_Ack();
 249   2          IIC_Send_Byte(WriteAddr>>8);        //发送高地址
 250   2          IIC_Wait_Ack();
 251   2          IIC_Send_Byte(WriteAddr%256);      //发送低地址
 252   2          IIC_Wait_Ack();                             
 253   2        } 
 254   1        else if(DeviceType==1)
 255   1        {
 256   2          IIC_Send_Byte(DeviceAddr & 0xFE);   //写器件地址    
 257   2          IIC_Wait_Ack();
 258   2          IIC_Send_Byte(WriteAddr%256);      //发送低地址
 259   2          IIC_Wait_Ack();                             
 260   2        } 
 261   1        
 262   1        while(len--)
 263   1        {
 264   2          IIC_Send_Byte(*(RegData++));      //发送字节                 
 265   2          IIC_Wait_Ack();
 266   2          //HAL_Delay(10);    
 267   2        }
 268   1        
 269   1        IIC_Stop();                         //产生一个停止条件 
 270   1        //HAL_Delay(10);
 271   1        delay_ms(10);
 272   1      }
 273          //
 274          
 275          
 276          
 277          
 278          
 279          
 280          
 281          
 282          
 283          
 284          
 285          
 286          
 287          
 288          
 289          
 290          
 291          
 292          
 293          
 294          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    883    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      39
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.56.0.0   IIC_SOFT                                                          04/25/2018 14:47:16 PAGE 6   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
