C51 COMPILER V9.56.0.0   24CXX                                                             04/25/2018 14:47:17 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE 24CXX
OBJECT MODULE PLACED IN .\Objects\24CXX.obj
COMPILER INVOKED BY: D:\hardware\Keil_v5\C51\BIN\C51.EXE ..\Src\24CXX.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Inc;..\
                    -User) DEBUG OBJECTEXTEND PRINT(.\Listings\24CXX.lst) TABS(2) OBJECT(.\Objects\24CXX.obj)

line level    source

   1          #include "24cxx.h" 
   2          #include "delay.h"
   3          
   4          //初始化IIC接口
   5          void AT24CXX_Init(void)
   6          {
   7   1        IIC_Init();
   8   1      }
   9          //在AT24CXX指定地址读出一个数据
  10          //ReadAddr:开始读数的地址  
  11          //返回值  :读到的数据
  12          u8 AT24CXX_ReadOneByte(u16 ReadAddr)
  13          {         
  14   1        u8 temp=0;                                             
  15   1          IIC_Start();  
  16   1        if(EE_TYPE>AT24C16)
  17   1        {
  18   2          IIC_Send_Byte(0XA0);     //发送写命令
  19   2          IIC_Wait_Ack();
  20   2          IIC_Send_Byte(ReadAddr>>8);//发送高地址  
  21   2        }else IIC_Send_Byte(0XA0+((ReadAddr/256)<<1));   //发送器件地址0XA0,写数据   
  22   1      
  23   1        IIC_Wait_Ack(); 
  24   1          IIC_Send_Byte(ReadAddr%256);   //发送低地址
  25   1        IIC_Wait_Ack();     
  26   1        IIC_Start();         
  27   1        IIC_Send_Byte(0XA1);           //进入接收模式        
  28   1        IIC_Wait_Ack();  
  29   1          temp=IIC_Read_Byte(0);       
  30   1          IIC_Stop();//产生一个停止条件     
  31   1        return temp;
  32   1      }
  33          //在AT24CXX指定地址写入一个数据
  34          //WriteAddr  :写入数据的目的地址    
  35          //DataToWrite:要写入的数据
  36          void AT24CXX_WriteOneByte(u16 WriteAddr,u8 DataToWrite)
  37          {                                                    
  38   1          IIC_Start();  
  39   1        if(EE_TYPE>AT24C16)
  40   1        {
  41   2          IIC_Send_Byte(0XA0);      //发送写命令
  42   2          IIC_Wait_Ack();
  43   2          IIC_Send_Byte(WriteAddr>>8);//发送高地址
  44   2        }else
  45   1        {
  46   2          IIC_Send_Byte(0XA0+((WriteAddr/256)<<1));   //发送器件地址0XA0,写数据 
  47   2        }  
  48   1        IIC_Wait_Ack();    
  49   1          IIC_Send_Byte(WriteAddr%256);   //发送低地址
  50   1        IIC_Wait_Ack();                                
  51   1        IIC_Send_Byte(DataToWrite);     //发送字节                 
  52   1        IIC_Wait_Ack();              
  53   1          IIC_Stop();//产生一个停止条件 
  54   1        delay_ms(10);
C51 COMPILER V9.56.0.0   24CXX                                                             04/25/2018 14:47:17 PAGE 2   

  55   1      }
  56          //在AT24CXX里面的指定地址开始写入长度为Len的数据
  57          //该函数用于写入16bit或者32bit的数据.
  58          //WriteAddr  :开始写入的地址  
  59          //DataToWrite:数据数组首地址
  60          //Len        :要写入数据的长度2,4
  61          void AT24CXX_WriteLenByte(u16 WriteAddr,u32 DataToWrite,u8 Len)
  62          {   
  63   1        u8 t;
  64   1        for(t=0;t<Len;t++)
  65   1        {
  66   2          AT24CXX_WriteOneByte(WriteAddr+t,(DataToWrite>>(8*t))&0xff);
  67   2        }                           
  68   1      }
  69          
  70          //在AT24CXX里面的指定地址开始读出长度为Len的数据
  71          //该函数用于读出16bit或者32bit的数据.
  72          //ReadAddr   :开始读出的地址 
  73          //返回值     :数据
  74          //Len        :要读出数据的长度2,4
  75          u32 AT24CXX_ReadLenByte(u16 ReadAddr,u8 Len)
  76          {   
  77   1        u8 t;
  78   1        u32 temp=0;
  79   1        for(t=0;t<Len;t++)
  80   1        {
  81   2          temp<<=8;
  82   2          temp+=AT24CXX_ReadOneByte(ReadAddr+Len-t-1);             
  83   2        }
  84   1        return temp;                            
  85   1      }
  86          //检查AT24CXX是否正常
  87          //这里用了24XX的最后一个地址(255)来存储标志字.
  88          //如果用其他24C系列,这个地址要修改
  89          //返回1:检测失败
  90          //返回0:检测成功
  91          u8 AT24CXX_Check(void)
  92          {
  93   1        u8 temp;
  94   1        temp=AT24CXX_ReadOneByte(255);//避免每次开机都写AT24CXX        
  95   1        if(temp==0X55)return 0;      
  96   1        else//排除第一次初始化的情况
  97   1        {
  98   2          AT24CXX_WriteOneByte(255,0X55);
  99   2            temp=AT24CXX_ReadOneByte(255);    
 100   2          if(temp==0X55)return 0;
 101   2        }
 102   1        return 1;                       
 103   1      }
 104          
 105          //在AT24CXX里面的指定地址开始读出指定个数的数据
 106          //ReadAddr :开始读出的地址 对24c02为0~255
 107          //pBuffer  :数据数组首地址
 108          //NumToRead:要读出数据的个数
 109          void AT24CXX_Read(u16 ReadAddr,u8 *pBuffer,u16 NumToRead)
 110          {
 111   1        while(NumToRead)
 112   1        {
 113   2          *pBuffer++=AT24CXX_ReadOneByte(ReadAddr++); 
 114   2          NumToRead--;
 115   2        }
 116   1      }  
C51 COMPILER V9.56.0.0   24CXX                                                             04/25/2018 14:47:17 PAGE 3   

 117          //在AT24CXX里面的指定地址开始写入指定个数的数据
 118          //WriteAddr :开始写入的地址 对24c02为0~255
 119          //pBuffer   :数据数组首地址
 120          //NumToWrite:要写入数据的个数
 121          void AT24CXX_Write(u16 WriteAddr,u8 *pBuffer,u16 NumToWrite)
 122          {
 123   1        while(NumToWrite--)
 124   1        {
 125   2          AT24CXX_WriteOneByte(WriteAddr,*pBuffer);
 126   2          WriteAddr++;
 127   2          pBuffer++;
 128   2        }
 129   1      }
 130           
 131          
 132          
 133          
 134          
 135          
 136          
 137          
 138          
 139          
 140          
 141          
*** WARNING C294 IN LINE 46 OF ..\Src\24CXX.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    545    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      32
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
