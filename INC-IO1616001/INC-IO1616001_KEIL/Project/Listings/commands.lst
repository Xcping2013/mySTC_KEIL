C51 COMPILER V9.56.0.0   COMMANDS                                                          04/29/2018 13:14:31 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE COMMANDS
OBJECT MODULE PLACED IN .\Objects\commands.obj
COMPILER INVOKED BY: D:\hardware\Keil_v5\C51\BIN\C51.EXE ..\src\commands.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\inc)
                    - DEBUG OBJECTEXTEND PRINT(.\Listings\commands.lst) TABS(2) OBJECT(.\Objects\commands.obj)

line level    source

   1          #include  "commands.h"
   2          #include  "IO.h"
   3          #include  "EEPROM.h"
   4          #include  "IIC_SOFT.h"
   5          #include  "Delay.h"
   6          #include  "UART1.h"
   7          
   8          #include  <string.h>
   9          #include  <stdlib.h>
  10          
  11          //¾²Ì¬º¯ÊýÉùÃ÷
  12          static void charConvert( char *str);
  13          static void Help(void);
  14          static void Reset(void);
  15          static void Software_version(void);
  16          static void Hardware_version(void);
  17          static void Read_SN(void);
  18          static u8 Write_SN(char *str);
  19          
  20          static u8 CMD_GetInputStatus(char *str);
  21          static u8 CMD_GetSensorStatus(char *str);
  22          static u8 CMD_SetOutputStatus(char *str);
  23          static u8 CMD_AirControl(char *str);
  24          static u8 CMD_X2B_TEST(char *str);
  25          static u8 XPCL_RomPage(char *Commands);
  26          
  27          //´óÐ´×ÖÄ¸×ªÐ¡Ð´
  28          static void charConvert( char *str)   
  29          {
  30   1          while(*str!='\0')
  31   1          {
  32   2              if( ((*str)>='A')&&((*str)<='Z') )
  33   2              {
  34   3                  *str=*str+32;
  35   3              }
  36   2              str++;
  37   2          }
  38   1      }
  39          
  40          //Í¨Ñ¶ÃüÁî½âÎö´¦Àí
  41          u8 ProcessCommand(char *ptr)        
  42          {
  43   1        charConvert(ptr);
  44   1        if(strcmp("help",ptr)==0)             {Help();                              return 1; }   //ÃüÁîÌáÊ¾
  45   1        else if(strcmp("reset",ptr)==0)       {Reset();                             return 1; }   //IO°å×Ó¸´Î»
  46   1        /******************************²ÎÊý¶ÁÈ¡ÉèÖÃ******************************************/
  47   1        else if(strcmp("sv",ptr)==0)          {Software_version();                  return 1; }   //Èí¼þ°æ±¾
  48   1        else if(strcmp("hv",ptr)==0)          {Hardware_version();                  return 1; }   //Ó²¼þ°æ±¾
  49   1        else if(strcmp("fsn",ptr)==0)         {Read_SN();                           return 1; }   //¶ÁÈ¡FSN
  50   1        else if(Write_SN(ptr)==1)             {UART1_SendStr("set sn ok\n");        return 1; }   //ÉèÖÃFSN
  51   1        /*****************************»ù±¾IO²Ù×÷*********************************************/  
  52   1        else if(CMD_GetInputStatus(ptr)==1)                                         return 1;     
  53   1        else if(CMD_SetOutputStatus(ptr)==1)  {UART1_SendStr("set output ok\n");    return 1; } 
  54   1        /*******QT1_X2BÃüÁî·â×°£º´«¸ÐÆ÷²É¼¯£¬Æø¸×¶¯×÷£¬¼ÌµçÆ÷ÇÐ»»£¬·µ»ØÖµÐèÒª²»Í¬£¬¼ÓÒÔÇø±ð*/
C51 COMPILER V9.56.0.0   COMMANDS                                                          04/29/2018 13:14:31 PAGE 2   

  55   1        else if(CMD_GetSensorStatus(ptr)==1)                                        return 1;     //´«¸ÐÆ÷ÊäÈë¼ì²â  
  56   1        else if(CMD_AirControl(ptr)==1)       {return 1;  }   //Æø¸×Êä³ö¿ØÖÆ
  57   1        else if(CMD_X2B_TEST(ptr)==1)         {                                     return 1; }   //¼ÌµçÆ÷Ð¡°åÇÐ»»²âÊÔÏîÄ¿
  58   1        
  59   1        else  if(XPCL_RomPage(ptr)==1)              return 1;   
  60   1        
  61   1        else if(strcmp("io test",   ptr)==0)      {   IoTestFlag=1;             return 1;   }
  62   1        else if(strcmp("start test",    ptr)==0)  {   BoardTestFlag=1;              return 1;   }
  63   1        else if(strcmp("stop test",   ptr)==0)    {   BoardTestFlag=0;  IoTestFlag=0;           return 1;   }
  64   1      
  65   1        
  66   1        else if(ptr[0]=='\0')                 {UART1_SendStr("\n");                 return 1; }   //·¢ËÍ»Ø³µ  
  67   1        else                                  {UART1_SendStr("NA\n");               return 0; }   //
  68   1      }
  69          /******************************°å   ×Ó    »ù    ±¾    ¹¦    ÄÜ****************************/
  70          //»ù±¾ÊäÈë¿Ú×´Ì¬¼ì²â  eg:   send: "input 01" ; return:"senser1 turn on/off"  Èç¹û¶ÔÓ¦ÊäÈë¿Ú½ÓµÄÊÇ°´¼ü£¬ÔòÐèÒ
             -ªÑÓÊ±È¥¶¶¶¯
  71          static u8 CMD_GetInputStatus(char *str)
  72          {
  73   1        if((strncmp("input",str,5)==0) && (str[5]==' ') )
  74   1         {
  75   2           u8 Pin = ((str[6]-0x30)*10)+((str[7])-0x30); 
  76   2           switch(Pin)
  77   2           {
  78   3              case 1: if(INPUT1  ==  0)
  79   3                      {           
  80   4                        UART1_SendStr("senser1 turn on\n"); return 1;
  81   4                      }
  82   3                      else UART1_SendStr("senser1 turn off\n");return 1;
  83   3                      //break;
  84   3                      
  85   3              case 2: if(INPUT2  ==  0)
  86   3                      {
  87   4                        UART1_SendStr("senser2 turn on\n"); return 1;
  88   4                      }
  89   3                      else UART1_SendStr("senser2 turn off\n");return 1;
  90   3                      //break;
  91   3              
  92   3              case 3: if(INPUT3==0)
  93   3                      {
  94   4                        UART1_SendStr("senser3 turn on\n");return 1;
  95   4                      }
  96   3                      else UART1_SendStr("senser3 turn off\n");return 1;
  97   3                      //break;
  98   3              
  99   3              case 4: if(INPUT4==0)
 100   3                      {
 101   4                        UART1_SendStr("senser4 turn on\n");return 1;
 102   4                      }
 103   3                      else UART1_SendStr("senser4 turn off\n");return 1;
 104   3                      //break;
 105   3              
 106   3              case 5: if(INPUT5==0)
 107   3                      {
 108   4                        UART1_Printf("senser5 turn on\n");return 1;
 109   4                      }
 110   3                      else UART1_Printf("senser5 turn off\n");return 1;
 111   3                      //break;
 112   3              
 113   3              case 6: if(INPUT6==0)
 114   3                      { 
 115   4                        UART1_Printf("senser6 turn on\n");return 1;
C51 COMPILER V9.56.0.0   COMMANDS                                                          04/29/2018 13:14:31 PAGE 3   

 116   4                      }
 117   3                      else UART1_Printf("senser6 turn off\n");return 1;
 118   3                      //break;
 119   3              
 120   3              case 7: if(INPUT7==0)
 121   3                      { 
 122   4                        UART1_Printf("senser7 turn on\n");return 1;
 123   4                      }
 124   3                      else UART1_Printf("senser7 turn off\n");return 1;
 125   3                      //break;
 126   3              case 8: if(INPUT8==0){UART1_Printf("senser8 turn on\n");return 1;}
 127   3                      UART1_Printf("senser8 turn off\n");return 1;
 128   3                      break;
 129   3              case 9: if(INPUT9==0){UART1_Printf("senser9 turn on\n");return 1;}
 130   3                      UART1_Printf("senser9 turn off\n");return 1;
 131   3                      break;
 132   3              case 10:  if(INPUT10==0){UART1_Printf("senser10 turn on\n");return 1;}
 133   3                      UART1_Printf("senser10 turn off\n");return 1;
 134   3                      break;
 135   3              case 11:  if(INPUT11==0){UART1_Printf("senser11 turn on\n");return 1;}
 136   3                      UART1_Printf("senser11 turn off\n");return 1;
 137   3                      break;
 138   3              case 12:  if(INPUT12==0){UART1_Printf("senser12 turn on\n");return 1;}
 139   3                      UART1_Printf("senser12 turn off\n");return 1;
 140   3                      break;    
 141   3              case 13:  if(INPUT13==0){UART1_Printf("senser13 turn on\n");return 1;}
 142   3                      UART1_Printf("senser13 turn off\n");return 1;
 143   3                      break;    
 144   3              case 14:  if(INPUT14==0){UART1_Printf("senser14 turn on\n");return 1;}
 145   3                      UART1_Printf("senser14 turn off\n");return 1;
 146   3                      break;      
 147   3              case 15:  if(INPUT15==0){UART1_Printf("senser15 turn on\n");return 1;}
 148   3                      UART1_Printf("senser15 turn off\n");return 1;
 149   3                      break;  
 150   3              case 16:  if(INPUT16==0){UART1_Printf("senser16 turn on\n");return 1;}
 151   3                      UART1_Printf("senser16 turn off\n");return 1;
 152   3                      break;          
 153   3              
 154   3              default: return 0;  //break;
 155   3           }
 156   2         }
 157   1          return 0; 
 158   1      }
 159          //»ù±¾Êä³ö¿Ú×´Ì¬¿ØÖÆ eg:    send: "output 01 1" ; 1 ±ÕºÏ£¬0¶Ï¿ª
 160          static u8 CMD_SetOutputStatus(char *str)
 161          {
 162   1        if((strncmp("output",str,6)==0) && (str[6]==' ') )
 163   1         {
 164   2           u8 Pin = ((str[7]-0x30)*10)+((str[8])-0x30);
 165   2           bit Val  = str[10]-0x30;  
 166   2           switch(Pin)
 167   2           {
 168   3             case 1:  OUTPUT1  = ~Val; return 1;//break;
 169   3             case 2:  OUTPUT2  = ~Val; return 1;//break;
 170   3             case 3:  OUTPUT3  = ~Val; return 1;//break;
 171   3             case 4:  OUTPUT4  = ~Val; return 1;//break;
 172   3             case 5:  OUTPUT5  = ~Val; return 1;//break;
 173   3             case 6:  OUTPUT6  = ~Val; return 1;//break;
 174   3             case 7:  OUTPUT7  = ~Val; return 1;//break;     
 175   3             case 8:  OUTPUT8  = ~Val; return 1;//break;
 176   3             
 177   3             case 9:  OUTPUT9  = ~Val; return 1;//break;
C51 COMPILER V9.56.0.0   COMMANDS                                                          04/29/2018 13:14:31 PAGE 4   

 178   3             case 10: OUTPUT10 = ~Val; return 1;//break;
 179   3             case 11: OUTPUT11 = ~Val; return 1;//break;
 180   3             case 12: OUTPUT12 = ~Val; return 1;//break;
 181   3             case 13: OUTPUT13 = ~Val; return 1;//break;
 182   3             case 14: OUTPUT14 = ~Val; return 1;//break;
 183   3             case 15: OUTPUT15 = ~Val; return 1;//break;
 184   3             case 16: OUTPUT16 = ~Val; return 1;//break;
 185   3             
 186   3             default: return 0;//break;      
 187   3           }
 188   2         }
 189   1        return 0;  
 190   1      }
 191          /******************************¶Ô   Ó¦  Ïî  Ä¿  ¿Ø  ÖÆ  Ãü  Áî  ·â  ×°****************************/
 192          //ÊäÈë´«¸ÐÆ÷¼ì²â
 193          static u8 CMD_GetSensorStatus(char *str)
 194          {
 195   1        if( strcmp(str,"left status")==0 )            //×ó±ß¹âÕ¤×´Ì¬¼ì²â£¬¹âÕ¤ÎÞ´¥ÅöÊ±Îª0£¬´¥ÅöºóÎÀ1.
 196   1        {
 197   2          if( INPUT3==1 || INPUT4==1 )
 198   2          {
 199   3            UART1_SendStr("left true@\n");return 1;
 200   3          }   
 201   2          else UART1_SendStr("left false@\n");return 1;
 202   2        } 
 203   1        else if( strcmp(str,"light status")==0 )      //×óÓÒ¹âÕ¤Ò»Æð¼ì²â
 204   1        {     
 205   2          if( INPUT3==1 || INPUT4==1 || INPUT5==1 || INPUT6==1)
 206   2          {
 207   3            UART1_SendStr("light touched true@\n");return 1;
 208   3          }   
 209   2          else UART1_SendStr("light touched false@\n");return 1;
 210   2        }
 211   1        
 212   1        else if( strcmp(str,"right status")==0 )      //ÓÒ¹âÕ¤×´Ì¬¼ì²â
 213   1        {
 214   2          if( INPUT5==1 || INPUT6==1 )
 215   2          {
 216   3            UART1_SendStr("right true@\n");return 1;
 217   3          } 
 218   2          else UART1_SendStr("right false@\n");return 1;
 219   2        }
 220   1        
 221   1        else if( strcmp(str,"p0 status")==0 )         //P0Î»ÖÃÓÐÎÞ²úÆ·¼ì²â£¬ÎÞ²úÆ·Ê±Îª0£¬¿ÉÉèÖÃ´«¸ÐÆ÷
 222   1        {
 223   2          if( INPUT1==1)
 224   2          { 
 225   3            UART1_SendStr("p0 true@\n");return 1; 
 226   3          }
 227   2          else UART1_SendStr("p0 false@\n");return 1;
 228   2        }
 229   1        else if( strcmp(str,"p4 status")==0 )         //P4Î»ÖÃÓÐÎÞ²úÆ·¼ì²â
 230   1        {
 231   2          if( INPUT2==1 )
 232   2          {
 233   3            UART1_SendStr("p4 true@\n");return 1;
 234   3          }   
 235   2          else UART1_SendStr("p4 false@\n");return 1;
 236   2        }
 237   1        else if( strcmp(str,"inside status")==0 )     //°´¼üÆø¸×ÊÇ·ñ´¦ÓÚËõ»Ø×´Ì¬    
 238   1        {
 239   2          if( INPUT7==0 && INPUT8==1)
C51 COMPILER V9.56.0.0   COMMANDS                                                          04/29/2018 13:14:31 PAGE 5   

 240   2          {
 241   3            UART1_SendStr("inside true@\n");return 1;
 242   3          }   
 243   2          else UART1_SendStr("inside false@\n");return 1;
 244   2        }
 245   1        
 246   1        else if( strcmp(str,"outside status")==0 )    //°´¼üÆø¸×ÊÇ·ñ´¦ÓÚµ¯³ö×´Ì¬  
 247   1        {
 248   2          if( INPUT7==1 && INPUT8==0)
 249   2          {
 250   3            UART1_SendStr("outside true@\n");return 1;
 251   3          }   
 252   2          else UART1_SendStr("outside false@\n");return 1;
 253   2        }
 254   1        else if( strcmp(str,"p2 upside status")==0 )  //P2´¹Ö±Æø¸×Ëù´¦Î»ÖÃ²éÑ¯  
 255   1        {
 256   2          if( INPUT13==0 && INPUT14==1 )
 257   2          {       
 258   3            UART1_SendStr("p2 downside true@\n");return 1;
 259   3          }   
 260   2          else if( INPUT13==1 && INPUT14==0 )
 261   2          { 
 262   3            UART1_SendStr("p2 upside true@\n");return 1;
 263   3          }   
 264   2          else  UART1_SendStr("p2 status undefine@\n");return 1;
 265   2        }
 266   1        else if( strcmp(str,"p3 upside status")==0 )  //P3´¹Ö±Æø¸×Ëù´¦Î»ÖÃ²éÑ¯    
 267   1        {
 268   2          if( INPUT15==0 && INPUT16==1 )
 269   2          {
 270   3            UART1_SendStr("p3 downside true@\n");return 1;
 271   3          }   
 272   2          else if( INPUT15==1 && INPUT16==0 )
 273   2          { 
 274   3            UART1_SendStr("p3 upside true@\n");return 1;
 275   3          }   
 276   2          else  UART1_SendStr("p3 status undefine@\n");return 1;
 277   2        }
 278   1      
 279   1        else if( strcmp(str,"p2 status")==0 )         //P2×¦×Ó×´Ì¬£¬×óÓÒÒ»Æð  
 280   1        {
 281   2          if( INPUT9==1 && INPUT10==1 )
 282   2          { 
 283   3            UART1_SendStr("p2 open@\n");return 1; 
 284   3          }
 285   2          else if( INPUT9==0 && INPUT10==0 )
 286   2          { 
 287   3            UART1_SendStr("p2 close@\n");return 1;
 288   3          }       
 289   2          else  UART1_SendStr("p2 undefine@\n");return 1;
 290   2        } 
 291   1        else if( strcmp(str,"p3 status")==0 )         //P3×¦×Ó×´Ì¬  
 292   1        {
 293   2          if( INPUT11==0 && INPUT12==0 )
 294   2          { 
 295   3            UART1_SendStr("p3 close@\n");return 1;  
 296   3          }
 297   2          else if( INPUT11==1 && INPUT12==1 )
 298   2          { 
 299   3            UART1_SendStr("p3 open@\n");return 1;
 300   3          }   
 301   2          else UART1_SendStr("p3 undefine@\n");return 1;
C51 COMPILER V9.56.0.0   COMMANDS                                                          04/29/2018 13:14:31 PAGE 6   

 302   2        } 
 303   1        return 0;
 304   1      }
 305          //Êä³öÆø¸×¿ØÖÆ
 306          static u8 CMD_AirControl(char *str)
 307          {
 308   1        if( strcmp(str,"air in")==0 )             //°´¼üÆø¸×Ëõ½ø
 309   1        {
 310   2          OUTPUT15=1;
 311   2          UART1_SendStr("ok@AIR IN\n");
 312   2          return 1; 
 313   2        }
 314   1        else if( strcmp(str,"air out")==0 )       //°´¼üÆø¸×µ¯³ö
 315   1        {
 316   2          OUTPUT15=0;
 317   2          UART1_SendStr("ok@AIR OUT\n");
 318   2          return 1;
 319   2        }
 320   1        else if( strcmp(str,"p2 open")==0 )       //P2×óÓÒ×¦×Ó¶¼´òËÉ¿ª
 321   1        {
 322   2          OUTPUT1=0;OUTPUT2=1;
 323   2          OUTPUT3=0;OUTPUT4=1;
 324   2          UART1_SendStr("ok@P2 OPEN\n");
 325   2          return 1;
 326   2        }
 327   1        else if( strcmp(str,"p2 close")==0 )      //P2×óÓÒ×¦×Ó¶¼±ÕºÏ
 328   1        {
 329   2          OUTPUT1=1;OUTPUT2=0;
 330   2          OUTPUT3=1;OUTPUT4=0;
 331   2          UART1_SendStr("ok@P2 CLOSE\n");
 332   2          return 1;
 333   2        }
 334   1        else if( strcmp(str,"p3 open")==0 )       //P3×óÓÒ×¦×ÓËÉ¿ª
 335   1        {
 336   2          OUTPUT5=0;OUTPUT6=1;
 337   2          OUTPUT7=0;OUTPUT8=1;
 338   2          UART1_SendStr("ok@P3 OPEN\n");
 339   2          return 1;
 340   2        }
 341   1        else if( strcmp(str,"p3 close")==0 )      //P3×óÓÒ×¦×Ó±ÕºÏ
 342   1        {
 343   2          OUTPUT5=1;OUTPUT6=0;
 344   2          OUTPUT7=1;OUTPUT8=0;
 345   2          UART1_SendStr("ok@P3 CLOSE\n");
 346   2          return 1;
 347   2        }
 348   1        return 0;
 349   1      }
 350          //²âÊÔÏîµçÂ·ÇÐ»»
 351          static u8 CMD_X2B_TEST(char *str)
 352          {
 353   1        if( strcmp(str,"i dut")==0 )                                //²âÊÔDUT³äµçµçÁ÷
 354   1        {
 355   2          OUTPUT12=1;OUTPUT11=1;OUTPUT10=1;OUTPUT9=1;               //¶Ï¿ªÆäËüÏßÂ·
 356   2          OUTPUT13=0;OUTPUT16=0;                                    //µØÏß±ÕºÏ£¬µçÔ´Ïß¶Ï¿ª
 357   2          OUTPUT14=0;                                               //´®ÈëµçÁ÷±í
 358   2          UART1_SendStr("ok@I DUT\n");return 1;
 359   2        }
 360   1        else if( strcmp(str,"r ea")==0 )                            //²âÊÔDUT×ó±ßµç×è
 361   1        {
 362   2          OUTPUT16=1;                                               //¶Ï¿ªµØÏß
 363   2          OUTPUT13=1;OUTPUT14=0;OUTPUT12=1;OUTPUT11=1;OUTPUT10=1;   //¶Ï¿ªµçÔ´Ïß
C51 COMPILER V9.56.0.0   COMMANDS                                                          04/29/2018 13:14:31 PAGE 7   

 364   2          OUTPUT9=0;                                                  //½ÓÈëµç×è±í  
 365   2          UART1_SendStr("ok@R EA\n");return 1;
 366   2        }
 367   1        else if( strcmp(str,"r eb")==0 )                            //²âÊÔDUTÓÒ±ßµç×è
 368   1        {
 369   2          OUTPUT16=1;                                               //¶Ï¿ªµØÏß
 370   2          OUTPUT13=1;OUTPUT14=0;OUTPUT12=1;OUTPUT11=1;OUTPUT9=1;    //¶Ï¿ªµçÔ´Ïß
 371   2          OUTPUT10=0;                                               //½ÓÈëµç×è±í
 372   2          UART1_SendStr("ok@R EB\n");return 1;
 373   2        }
 374   1        else if( strcmp(str,"i eb")==0 )                            //²âÊÔDUT×ó¶úµçÁ÷
 375   1        {
 376   2          OUTPUT16=0;                                               //µØÏß±ÕºÏ
 377   2          OUTPUT13=1;OUTPUT14=1;OUTPUT11=1;OUTPUT10=1;OUTPUT9=1;    //µçÔ´Ïß±ÕºÏ
 378   2          OUTPUT12=0;                                               //µçÁ÷±í´®Èë¶ú»úÏßÂ·ÖÐ
 379   2          UART1_SendStr("ok@I EB\n");return 1;  
 380   2        } 
 381   1        else if( strcmp(str,"i ea")==0 )                            //²âÊÔDUTÓÒ¶úµçÁ÷
 382   1        {
 383   2          OUTPUT16=0;                                               //DUTµØÏß±ÕºÏ
 384   2          OUTPUT13=1;OUTPUT14=1;OUTPUT12=1;OUTPUT10=1;OUTPUT9=1;    //ÆäËü¼ÌµçÆ÷¶Ï¿ª
 385   2          OUTPUT11=0;                                                 //µçÁ÷±í´®Èë¶ú»úÏßÂ·ÖÐ
 386   2          UART1_SendStr("ok@I EA\n");return 1;
 387   2        } 
 388   1        else if( strcmp(str,"power on")==0 )                        //DUT£ºGNDÓëVCC±ÕºÏµ¼Í¨
 389   1        {
 390   2          OUTPUT16=0; OUTPUT14=1; OUTPUT13=1;                                 //±ÕºÏµØÏß¡¢µçÔ´Ïß                                    
 391   2          OUTPUT9=1;OUTPUT10=1;OUTPUT11=1;OUTPUT12=1;   //¶Ï¿ªÆäËû
 392   2          UART1_SendStr("ok@POWER ON\n");return 1;
 393   2        } 
 394   1        else if( strcmp(str,"power off")==0 )                       //DUT£ºGNDÓëVCC¶Ï¿ª
 395   1        {
 396   2          OUTPUT16=0; OUTPUT14=0; OUTPUT13=1;                       //µçÔ´Ïß   ±£ÁôµØÏß
 397   2          OUTPUT9=1;OUTPUT10=1;OUTPUT11=1;OUTPUT12=1;               //¶Ï¿ªÆäËû  
 398   2          UART1_SendStr("ok@POWER OFF\n");return 1;
 399   2        }
 400   1        else if( strcmp(str,"p2 done")==0 )                         //P2²âÊÔÍê³É£¬ÏßÂ·ÇÐ»»Îª³äµç×´Ì¬£¬²»½ÓÈçÍòÓÃ±í
 401   1        { 
 402   2          OUTPUT16=0;   
 403   2          OUTPUT13=1;OUTPUT14=1;OUTPUT12=1;OUTPUT11=1;OUTPUT10=1;OUTPUT9=1;
 404   2          UART1_SendStr("ok@P2 DONE\n");return 1;
 405   2        }
 406   1        return 0;
 407   1      }
 408          //°ïÖúÌáÊ¾
 409          static void Help(void)
 410          {
 411   1        UART1_Printf("help-------------------------command list and description\n");
 412   1        UART1_Printf("reset------------------------reset fixture\n");
 413   1        UART1_Printf("fsn--------------------------get the fixture SN number\n");
 414   1        UART1_Printf("sn:xx---xxxx-----------------set the fixture SN number\n");   
 415   1        UART1_Printf("sv---------------------------get the fixture software version number\n");
 416   1        UART1_Printf("hv---------------------------get the fixture hardware version number\n");   
 417   1        UART1_Printf("SAVE INFO XX YYYYY\n");
 418   1        UART1_Printf("READ INFO XX\n");
 419   1      
 420   1        UART1_Printf("input xx---------------------get the input pin status\n");
 421   1        UART1_Printf("output xx y------------------set the output pin to y\n"); 
 422   1        
 423   1        UART1_Printf("air in ----------------------cylinder in\n");
 424   1        UART1_Printf("air out ---------------------cylinder out\n");
 425   1        UART1_Printf("p2 open ---------------------p2 claw open\n");
C51 COMPILER V9.56.0.0   COMMANDS                                                          04/29/2018 13:14:31 PAGE 8   

 426   1        UART1_Printf("p2 close --------------------p2 claw close\n");
 427   1        UART1_Printf("p3 open ---------------------p3 claw open\n");
 428   1        UART1_Printf("p3 close --------------------p3 claw close\n");
 429   1      
 430   1        UART1_Printf("i dut -----------------------switch to measure dut charging current\n");  
 431   1        UART1_Printf("r ea ------------------------switch to measure earphoneA resistance\n");
 432   1        UART1_Printf("r eb ------------------------switch to measure earphoneB resistance\n");
 433   1        UART1_Printf("i ea ------------------------switch to measure earphoneA current\n");
 434   1        UART1_Printf("i eb ------------------------switch to measure earphoneB current\n");
 435   1        UART1_Printf("p2 done ---------------------dut connect to power supply,out of measure mode\n");
 436   1        UART1_Printf("power on --------------------dut connect to power supply\n");
 437   1        UART1_Printf("power off -------------------dut disconnect to power supply\n");
 438   1        
 439   1        UART1_Printf("left status------------------\n");
 440   1        UART1_Printf("right status-----------------\n");
 441   1        UART1_Printf("light status-----------------\n");
 442   1        UART1_Printf("p0/1/4 status----------------\n");
 443   1        
 444   1        UART1_Printf("inside status----------------\n");
 445   1        UART1_Printf("outside status--------------\n"); 
 446   1      
 447   1        UART1_Printf("p2 status----------------\n");
 448   1        UART1_Printf("p2 upside status----------------\n");
 449   1        
 450   1        UART1_Printf("p3 status----------------\n");
 451   1        UART1_Printf("p3 upside status----------------\n");
 452   1        
 453   1      }
 454          //°å×ÓÈí¸´Î»
 455          static void Reset(void)
 456          {
 457   1        IAP_CONTR=0xa0;
 458   1      }
 459          //Èí¼þ°æ±¾
 460          static void Software_version(void)
 461          {
 462   1        UART1_Printf("ver3.0\n");
 463   1      }
 464          ///Ó²¼þ°æ±¾
 465          static void Hardware_version(void)
 466          {
 467   1        UART1_Printf("ver2.2\n"); 
 468   1      }
 469          //¶ÁSN
 470          static void Read_SN(void)
 471          {
 472   1        u8 i = 0;
 473   1        u8 SNNO[40];
 474   1        EEP_Read(SNNO,40);
 475   1        SNNO[39]='\0';
 476   1        UART1_Printf("fsn:%S\n",SNNO);
 477   1      }
 478          //Ð´SN
 479          static u8 Write_SN(u8 *str)
 480          {
 481   1        u8 m = 0;
 482   1        u8 buf[40];
 483   1        if( (str[0]=='s') &&  (str[1]=='n') &&  (str[2]==':') )
 484   1        {
 485   2          for(m=3;m<37;m++)
 486   2          {
 487   3            buf[m-3] = str[m];
C51 COMPILER V9.56.0.0   COMMANDS                                                          04/29/2018 13:14:31 PAGE 9   

 488   3          }
 489   2          HW_EraseIAPSector(0);
 490   2          EEP_Write(buf,40);
 491   2          return 1;
 492   2        }
 493   1        else
 494   1        {
 495   2          return 0;
 496   2        }
 497   1      }
 498          //
 499          static u8 XPCL_RomPage(char *Commands)
 500          {
 501   1        if( strncmp(Commands,"save info ",10)==0  ) 
 502   1        { 
 503   2          char *p = NULL;
 504   2          char *s = &Commands[10];  
 505   2          u16 PageNum=0;  
 506   2          PageNum=strtol(s, &p, 10);  
 507   2          P15=1;P16=1;
 508   2          if( *p==' ' && PageNum>0 && PageNum <(256-10) )     //Ç°10Ò³ÓÃÓÚFSN+ROM 
 509   2          {
 510   3            IIC_DeviceWriteBytes(0xA0,64*(10+PageNum),(u8 *)p+1,64,2);
 511   3            UART1_Printf("save info %d OK\n",PageNum); 
 512   3            return 1;
 513   3          } 
 514   2          UART1_SendStr("<NA>\n");return 1;
 515   2        }
 516   1        if( strncmp(Commands,"read info ",10)==0  ) 
 517   1        { 
 518   2          char *p = NULL;
 519   2          char *s = &Commands[10];  
 520   2          u16 PageNum=0;  
 521   2          u8 DataRead[64]={'\0'};
 522   2          PageNum=strtol(s, &p, 10);  
 523   2          P15=1;P16=1;
 524   2          if( *p=='\0' && PageNum>0 && PageNum <(256-10)  )     //Ç°10Ò³ÓÃÓÚFSN+ROM 
 525   2          {
 526   3            IIC_DeviceReadBytes(0xA0,64*(10+PageNum), DataRead,64,2);
 527   3            UART1_Printf("read info %d %.64s\n",PageNum,DataRead);
 528   3            return 1;
 529   3          } 
 530   2          UART1_SendStr("<NA>\n");return 1;
 531   2        }
 532   1        else return 0;
 533   1      }
 534          //
 535          ////////////////////////////////


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3679    ----
   CONSTANT SIZE    =   3204    ----
   XDATA SIZE       =   ----     179
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
